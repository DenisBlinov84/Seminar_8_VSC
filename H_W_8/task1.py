# Даны значения величины заработной платы заемщиков банка (zp) и значения их поведенческого кредитного скоринга (ks):
# zp = [35, 45, 190, 200, 40, 70, 54, 150, 120, 110],
# ks = [401, 574, 874, 919, 459, 739, 653, 902, 746, 832].
# Найдите ковариацию этих двух величин с помощью элементарных действий, а затем с помощью функции cov из numpy
# Полученные значения должны быть равны.
# Найдите коэффициент корреляции Пирсона с помощью ковариации и среднеквадратичных отклонений двух признаков,
# а затем с использованием функций из библиотек numpy и pandas.

import scipy.stats as stats
import numpy as np
import matplotlib.pyplot as plt

zp = np.array([35, 45, 190, 200, 40, 70, 54, 150, 120, 110])
ks = np.array([401, 574, 874, 919, 459, 739, 653, 902, 746, 832])

# расчёт ковариации с помощью элементарных действий:
print('Ковариация --->', (np.mean(zp*ks)-np.mean(zp)*np.mean(ks)))
# с помощью функции cov из numpy:
print('Ковариация --->', np.cov(zp, ks, ddof=0))

# расчитаем коэффициент корреляции с пощью функции:
print('Коэффициент корреляции --->', np.corrcoef(zp, ks))
# ---> 0.88749009 - сильная прямая линейная зависимость

# расчитаем коэффициент корреляции с помощью формулы:
cov = np.mean(zp*ks)-np.mean(zp)*np.mean(ks)
sd_zp = np.std(zp, ddof=0)  # смещённое стандартное отклонение
sd_ks = np.std(ks, ddof=0)
print('Коэффициент корреляции --->', (cov/(sd_zp*sd_ks)))
